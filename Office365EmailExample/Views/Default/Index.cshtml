@model Office365EmailExample.Models.EmailMessage

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@if(ViewBag.Success != null)
{
    if (ViewBag.Success)
    {
        <div style="color: green;"><strong>Message sent!</strong></div>
    }
    else
    {
        <div style="color: red;"><strong>Error sending message: </strong> @ViewBag.ErrorMessage</div>
    }
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Email Message</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h2>Message</h2>
        <div class="form-group">
            @Html.LabelFor(model => model.RecipientAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipientAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <h2>Credentials</h2>

        <div class="form-group">
            @Html.LabelFor(model => model.CredentialsUsername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CredentialsUsername, new { htmlAttributes = new { @class = "form-control" } }) <i>(note this may be username@domain.com, not your actual email address!!!)</i>
                @Html.ValidationMessageFor(model => model.CredentialsUsername, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CredentialsFullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CredentialsFullName, new { htmlAttributes = new { @class = "form-control" } }) <i>(you can find this when you look at your displayed name when you receive an email)</i>
                @Html.ValidationMessageFor(model => model.CredentialsFullName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CredentialsPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CredentialsPassword, new { htmlAttributes = new { @class = "form-control" } }) <i>(oftentimes your domain password)</i>
                @Html.ValidationMessageFor(model => model.CredentialsPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
